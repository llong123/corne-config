/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        f_layer_l {
            bindings = <&mo 6>;
            key-positions = <37 38>;
        };

        f_layer_r {
            bindings = <&mo 6>;
            key-positions = <39 40>;
        };
    };

    macros {
        Lcurly_WIN: Lcurly_WIN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N7)>;
            label = "LCURLY_WIN";
        };

        Rcurly_WIN: Rcurly_WIN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N0)>;
            label = "RCURLY_WIN";
        };

        Lcurly_Mac: Lcurly_Mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(RS(N8))>;
            label = "LCURLY_MAC";
        };

        Rcurly_Mac: Rcurly_Mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(RA(N9))>;
            label = "RCURLY_MAC";
        };

        Lsqr_WIN: Lsqr_WIN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N8)>;
            label = "LSQR_WIN";
        };

        Rsqr_WIN: Rsquare_WIN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N9)>;
            label = "RSQUARE_WIN";
        };

        Rsqr_Mac: Rsqr_Mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N9)>;
            label = "RSQR_MAC";
        };

        Lsqr_MacOS: Lsqr_Mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N8)>;
            label = "LSQR_MAC";
        };
    };

    behaviors {
        HRML: HRML {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <125>;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <13 14 15 16>;
        };

        HRMR: HRMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <19 20 21 22>;
        };

        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MacOS {
            display-name = "MACOS";
            bindings = <
&kp TAB     &kp Q          &kp W          &kp E         &kp R         &kp T        &kp Y    &kp U         &kp I         &kp O          &kp P             &bspc_del
&kp LSHIFT  &HRML LSHFT A  &HRML LCTRL S  &HRML LALT D  &HRML LGUI F  &kp G        &kp H    &HRMR RGUI J  &HRMR RALT K  &HRMR RCTRL L  &HRMR RSHFT SEMI  &kp SQT
&bspc_del   &kp Z          &kp X          &kp C         &kp V         &kp B        &kp N    &kp M         &kp COMMA     &kp DOT        &kp FSLH          &kp ESC
                                          &kp LGUI      &mo 2         &kp SPACE    &kp RET  &mo 4         &kp RALT
            >;
        };

        Windows {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "WINDOWS";
            bindings = <
&kp TAB    &kp Q          &kp W          &kp E         &kp R         &kp T        &kp Y    &kp U         &kp I         &kp O          &kp P             &bspc_del
&kp LSHFT  &HRML LSHFT A  &HRML LCTRL S  &HRML LALT D  &HRML LGUI F  &kp G        &kp H    &HRMR RGUI J  &HRMR RALT K  &HRMR RCTRL L  &HRMR RSHFT SEMI  &kp SQT
&bspc_del  &kp Z          &kp X          &kp C         &kp V         &kp B        &kp N    &kp M         &kp COMMA     &kp DOT        &kp FSLH          &kp ESC
                                         &kp LGUI      &mo 2         &kp SPACE    &kp RET  &mo 3         &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans     &trans  &trans  &trans  &trans  &trans       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp LCTRL  &trans  &trans  &trans  &trans  &trans       &trans    &trans    &trans  &trans     &trans  &trans
                           &trans  &trans  &kp SPACE    &kp RET   &trans    &trans
            >;
        };

        raise_WIN {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise WIN";
            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR     &kp RPAR  &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &Lsqr_WIN        &Rsqr_WIN    &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &Lcurly_WIN      &Rcurly_WIN  &kp PIPE  &kp TILDE
                          &trans    &trans    &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        raise_macOS {
            display-name = "Raise MacOS";
            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR     &kp RPAR  &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &Lsqr_MacOS      &Rsqr_Mac    &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &Lcurly_Mac      &Rcurly_Mac  &kp PIPE  &kp TILDE
                          &trans    &trans    &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&none        &none         &none         &to 0         &none         &to 1           &to 1   &none   &to 0   &none  &none  &none
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none   &none   &none  &none  &none
&bootloader  &none         &none         &none         &none         &none           &none   &none   &none   &none  &none  &bootloader
                                         &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "Tri_Layer";
        };

        F_layer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none   &none   &none   &none   &none   &none     &none   &none   &none   &none    &none    &none
&none   &none   &none   &none   &none   &none     &none   &none   &none   &none    &none    &none
                        &none   &none   &none     &none   &none   &none
            >;

            label = "F-Layer";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_WIN {
            if-layers = <2 3>;
            then-layer = <5>;
        };

        tri_MAC {
            if-layers = <2 4>;
            then-layer = <5>;
        };
    };
};
