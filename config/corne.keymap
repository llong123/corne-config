/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        copy_mac {
            bindings = <&kp RG(C)>;
            key-positions = <26 27>;
            layers = <0>;
            timeout-ms = <10>;
        };

        paste_mac {
            bindings = <&kp LG(V)>;
            key-positions = <28 27>;
            layers = <0>;
            timeout-ms = <10>;
        };

        cut_mac {
            bindings = <&kp LG(X)>;
            key-positions = <26 28>;
            timeout-ms = <10>;
            layers = <0>;
        };

        undo_mac {
            bindings = <&kp LG(Z)>;
            key-positions = <25 26>;
            layers = <0>;
            timeout-ms = <10>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <19 20 21>;
            timeout-ms = <10>;
        };

        mac_left_parenthese {
            bindings = <&kp LS(N8)>;
            key-positions = <8 7>;
            timeout-ms = <10>;
            layers = <0>;
        };

        mac_right_parenthese {
            bindings = <&kp LS(N9)>;
            key-positions = <8 9>;
            timeout-ms = <10>;
            layers = <0>;
        };

        mac_left_sqr_bracket {
            bindings = <&kp RA(N8)>;
            key-positions = <19 20>;
            timeout-ms = <10>;
            layers = <0>;
        };

        mac_right_sqr_bracket {
            bindings = <&kp RA(N9)>;
            key-positions = <20 21>;
            timeout-ms = <100>;
            layers = <0>;
        };

        mac_left_bracket {
            bindings = <&kp LS(RA(N8))>;
            key-positions = <32 31>;
            timeout-ms = <10>;
            layers = <0>;
        };

        mac_right_bracket {
            bindings = <&kp LS(RA(N9))>;
            key-positions = <32 33>;
            timeout-ms = <10>;
            layers = <0>;
        };

        f_layer {
            bindings = <&mo 4>;
            key-positions = <40 41>;
            timeout-ms = <200>;
        };

        winManagement_layer {
            bindings = <&mo 5>;
            key-positions = <36 37>;
            layers = <0>;
            timeout-ms = <200>;
        };

        mac_right_angle_bracket {
            bindings = <&kp LS(GRAVE)>;
            key-positions = <21 22>;
            timeout-ms = <10>;
            layers = <0>;
        };

        mac_left_angle_bracket {
            bindings = <&kp GRAVE>;
            key-positions = <9 10>;
            timeout-ms = <10>;
            layers = <0>;
        };

        semicolon {
            bindings = <&kp LS(PERIOD)>;
            key-positions = <34 33>;
            timeout-ms = <10>;
            layers = <0>;
        };
    };

    behaviors {
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mod_dance: mod_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "MOD_DANCE";
            #binding-cells = <0>;
            bindings = <&sk LGUI>, <&sk LCTRL>;

            tapping-term-ms = <500>;
        };

        manual_shutoff: manual_shutoff {
            compatible = "zmk,behavior-soft-off";
            label = "MANUAL_SHUTOFF";
            #binding-cells = <0>;
            hold-time-ms = <500>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MacOS {
            display-name = "MACOS";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E      &kp R         &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P     &bspc_del
&kp LEFT_CONTROL  &kp A  &kp S  &kp D      &kp F         &kp G        &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp NON_US_HASH
&sk LEFT_SHIFT    &kp Z  &kp X  &kp C      &kp V         &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp SQT   &kp SLASH
                                &lt 1 TAB  &sk LEFT_GUI  &kp SPACE    &kp ENTER  &sk RIGHT_ALT  &lt 2 ESC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&none  &none  &none           &kp UP_ARROW    &none            &none    &kp PAGE_UP    &kp N7  &kp N8  &kp N9  &kp LS(MINUS)  &none
&none  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none    &kp PAGE_DOWN  &kp N4  &kp N5  &kp N6  &kp LS(EQUAL)  &none
&none  &none  &none           &none           &none            &none    &none          &kp N1  &kp N2  &kp N3  &kp N0         &none
                              &trans          &none            &none    &none          &none   &none
            >;
        };

        raise_macOS {
            display-name = "Raise MacOS";
            bindings = <
&none  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)    &kp LS(NUMBER_6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)        &none
&none  &none             &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(NUMBER_4)  &kp RA(N5)    &kp GRAVE         &kp RA(N7)  &kp RA(N8)  &kp RA(N9)  &kp RA(NUMBER_0)  &none
&none  &none             &none             &none             &none             &none         &none             &none       &none       &none       &none             &none
                                           &none             &none             &none         &none             &none       &trans
            >;
        };

        tri_layer {
            bindings = <
&bootloader     &none  &none  &out OUT_TOG  &none  &bt BT_SEL 0    &bt BT_SEL 3  &none  &kp C_VOLUME_UP    &none  &none  &bootloader
&none           &none  &none  &none         &none  &bt BT_SEL 1    &bt BT_SEL 4  &none  &kp C_VOLUME_DOWN  &none  &none  &none
&studio_unlock  &none  &none  &kp RG(L)     &none  &bt BT_SEL 2    &bt BT_CLR    &none  &kp K_MUTE         &none  &none  &none
                              &trans        &none  &none           &none         &none  &trans
            >;

            label = "Tri_Layer";
        };

        F_layer {
            bindings = <
&none  &none  &kp F7  &kp F8  &kp F9  &kp F10    &none  &none   &none   &none  &none  &none
&none  &none  &kp F4  &kp F5  &kp F6  &kp F11    &none  &none   &none   &none  &none  &none
&none  &none  &kp F1  &kp F2  &kp F3  &kp F12    &none  &none   &none   &none  &none  &none
                      &none   &none   &none      &none  &trans  &trans
            >;

            label = "F_Layer";
        };

        MAC_winManagement {
            label = "Mac_winManagement";
            bindings = <
&manual_shutoff  &none  &none  &none   &none   &none    &mkp MB1      &none           &mmv MOVE_UP      &none            &none  &msc SCRL_UP
&none            &none  &none  &none   &none   &none    &mkp MB2      &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &none  &msc SCRL_DOWN
&none            &none  &none  &none   &none   &none    &kp RG(LEFT)  &kp RG(DOWN)    &kp RG(UP_ARROW)  &kp RG(RIGHT)    &none  &none
                               &trans  &trans  &none    &none         &none           &none
            >;
        };

        empty_reserve {
            bindings = <
&none  &none  &none  &none   &none   &none    &none  &none   &none   &none  &none  &none
&none  &none  &none  &none   &none   &none    &none  &none   &none   &none  &none  &none
&none  &none  &none  &none   &none   &none    &none  &none   &none   &none  &none  &none
                     &trans  &trans  &none    &none  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&none  &none  &none  &none   &none   &none    &none  &none  &none   &none  &none  &none
&none  &none  &none  &none   &none   &none    &none  &none  &none   &none  &none  &none
&none  &none  &none  &none   &none   &none    &none  &none  &none   &none  &none  &none
                     &trans  &trans  &none    &none  &none  &trans
            >;
        };

        layer_8 {
            bindings = <
&manual_shutoff  &none  &none  &none   &none  &none    &none  &none   &none   &none  &none  &none
&none            &none  &none  &none   &none  &none    &none  &none   &none   &none  &none  &none
&none            &none  &none  &none   &none  &none    &none  &none   &none   &none  &none  &none
                               &trans  &none  &none    &none  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        Reserved_layer {
            if-layers = <4 5>;
            then-layer = <6>;
        };

        Layer7 {
            if-layers = <5 2>;
            then-layer = <7>;
        };

        Layer8 {
            if-layers = <4 1>;
            then-layer = <8>;
        };
    };
};
